<!DOCTYPE html>
html(lang="ja")
    head
        meta(charset="UTF-8")
        meta(http-equiv="Content-Type", content="text/html;charset=UTF-8")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        title Look into Baskets
        link(rel="shortcut icon", href="{{ 'favicon.ico' | css }}", type="image/x-icon")
        link(rel="stylesheet", href="{{ 'css/destyle.css' | css }}")
        link(rel="stylesheet", href="{{ 'css/root.css' | css }}")
        link(rel="stylesheet", href="{{ 'css/style.css' | css }}")
        link(rel="stylesheet", href="{{ 'css/button.css' | css }}")
        link(rel="stylesheet", href="{{ 'css/modal.css' | css }}")
        link(rel="stylesheet", href="https://fonts.googleapis.com/css?family=Lato|Quicksand")
        link(rel="stylesheet", href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css")

        //- link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css")
        link(rel="stypesheet", href="https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.css")

    body
        .body-container
            header
                nav
                    .nav-container
                        div
                            img(src="{{ 'image/logo.jpg' | css }}", alt="logo", style="height:32px;")
                        .menu-container 
                            ion-icon(name="storefront-outline") 
                            div {{ displayStore.name }}
                            a#for-setting-modal.menu-item.setting_modal__open(style="cursor:pointer")
                                ion-icon(name="settings-outline")
                            a.menu-item(href="https://from-garage.work/privacy_policy.html")
                                ion-icon(name="lock-open-outline")
                            a.menu-item(href="https://from-garage.work/contact_us.html")
                                ion-icon(name="mail-outline")
                            a.menu-item(href="/accounts/logout") 
                                ion-icon(name="log-out-outline")
            main
                {% block body %}
                {% endblock %}
            footer ver 1.0.0

            #setting-modal.modal
                .modal__background.setting_modal__close
                    .modal__content
                        .modal__content__inner
                            {{csrf_hidden_input | safe}}
                            .form__group
                                p 対象店舗
                                button#sync-store 店舗同期する
                                select#select-store(name='display_store_id')
                                    option(value='', disabled) 店舗選択
                                    {% for store in stores %}
                                    {% if (store.storeId == displayStore.storeId) %}
                                    option(value=store.storeId, selected) {{ store.storeId }} - {{ store.name }}
                                    {% else %}
                                    option(value=store.storeId) {{ store.storeId }} - {{ store.name }}
                                    {% endif %}
                                    {% endfor %}
                            .form__group
                                p リアルタイム同期
                                p ※ リアルタイム同期は、スダンダードプランをご購入の方のみ利用できます
                                .toggle__switch
                                    .toggle_val {{useSmaregiWebhook}}
                                    {% if useSmaregiWebhook %}
                                    input#use-webhook.toggle-input(type="checkbox" name="use_webhook" value='1' checked)
                                    {% else %}
                                    input#use-webhook.toggle-input(type="checkbox" name="use_webhook" value='1')
                                    {% endif %}
                                    label.toggle-label(for="use-webhook")

                            {% if (signUp) %}
                            .section__group
                                p この設定は、右上の 歯車マーク からいつでも変更することができます
                            {% endif %}
                            button.saved 保存
                            button.setting_modal__close とじる

        script(src="https://unpkg.com/ionicons@5.4.0/dist/ionicons.js")
        script(src="https://unpkg.com/axios/dist/axios.min.js")
        //- select option
        script(src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js")
        script(src="{{ 'js/components/buttons/select.js' | static }}")

        //- vis.js	
        script(type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.js")

        script(type="module" src="{{ 'js/account_setting.js' | static }}")
        {% if (signUp) %}
        script(type="text/javascript").
            $(function() {
                $('#setting-modal').fadeIn(200);
            });
        {% endif %}

        script(type="text/javascript").
            $(function() {
                $('.setting_modal__open').click(function(event) {
                    axios.get('/accounts/setting')
                        .then(function (response) {
                            console.log(response)
                            let resp = JSON.parse(response.data)
                            console.log(resp)
                            let displayStore = resp.display_store_id
                            let useSmaregiWebhook = resp.use_smaregi_webhook
                            $('#select-store option[value=' + displayStore + ']').prop('selected', true)
                            $('input[name=use_webhook]').prop('checked', useSmaregiWebhook);
                            console.log(displayStore);
                            console.log(useSmaregiWebhook);
                        })
                    $('#setting-modal').fadeIn(200);
                });
                $('.modal__content__inner').click(function(event) {
                    event.stopPropagation()
                });
                $('.setting_modal__close').click(function(event) {
                    $('#setting-modal').fadeOut(200);
                });

                $('.saved').click(function() {
                    let csrf = "{{ csrf_token }}"
                    let storeId = $('#select-store').val()
                    let useWebhook = $('input[name=use_webhook]').prop('checked');

                    axios.post('/accounts/setting', {
                        csrf_token: csrf,
                        display_store_id: storeId,
                        use_smaregi_webhook: useWebhook,
                    })
                    .then(function (response) {
                        location.reload();
                    })
                    .catch(function (error) {
                        console.log(error);
                    });
                });
                $('#use-webhook').click(function() {
                    let useWebhook = $('input[name=use_webhook]').prop('checked');
                    console.log($('input[name=use_webhook]').prop('checked'))
                    console.log(useWebhook)
                    $('.toggle_val').text(useWebhook)
                })
                $('#sync-store').click(function() {
                    let csrf = "{{ csrf_token }}"
                    axios.put('/accounts/setting/stores', {
                        csrf_token: csrf,
                    })
                    .then(function (response) {
                        console.log('sync success')
                        axios.get('/accounts/setting/stores').then(function (response) {
                            console.log(response.data);
                            
                            $('#select-store > option').remove();
                            let select = $('#select-store');
                            response.data.forEach(function(element, index) {
                                let store = JSON.parse(element);
                                select.append(
                                    $('<option>').html(store.store_id + store.name).val(store.store_id)
                                );
                            });
                        });
                    })
                    .catch(function (error) {
                        console.log(error);
                    });
                })
            });