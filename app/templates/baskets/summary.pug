{% extends "base.pug" %}
{% block body %}

#basket__main
    h1 分析結果
    hr
    #basket-container
        h2 Pick Up!
        //- .summary
        //-     div.
        //-         {{ pickUpMessage.store.storeName }}店舗の{{ pickUpMessage.from }}から{{ pickUpMessage.to }}の期間、<br>
        //-         {% if pickUpMessage.productFrom == None %}
        //-         取引が存在しないか、関係性を見つけられませんでした。<br>
        //-         分析期間を変更して、再度分析してみてください。
            
        //-         {% else %}
        //-         <br>
        //-     .summary__productFrom.
        //-         (
        //-         {% for product in pickUpMessage.productFrom %}
        //-         {{product.label}}, 
        //-         {% endfor %}
        //-         )
        //-     div.
        //-         の組み合わせを購入したお客様は、<br>
        //-     .summary__productTo.
        //-         (
        //-         {% for product in pickUpMessage.productTo %}
        //-         {{product.label}}, 
        //-         {% endfor %}
        //-         )
        //-     div.
        //-         の組み合わせも一緒に購入されることが多いようです。<br><br>
        //-         この結果から考えられる人物像に向け、
        //-         <br>
        //-         新たな商品や商品配置を考えてみましょう！
        //-     {% endif %}

        hr
        .basket-network 
            h2 ネットワーク図
            .graph
                #circle-option.circle-option
                    ul.network__option
                        li edit
                        li delete
                        li link
                #network
            button#for-network-modal.modal__open 見方はこちら
        hr
        button
            a(href="/baskets/associate") 条件を変えてもう一度分析する 
    #network-modal.modal
        .modal__background.modal__close
            .modal__content
                .modal__content__inner
                    img(src="{{ 'image/explain/network_1.PNG' | css }}", alt="", style="width:80%;")
                    hr
                    img(src="{{ 'image/explain/network_2.PNG' | css }}", alt="", style="width:80%;")
                    hr
                    button.modal__close とじる

//- datepicker.js
//- link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css")
script(src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.0/jquery.min.js")
//- script(src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js")

//- vis.js	
link(rel="stypesheet", href="https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.css")
script(type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.js")
script.
    $(function() {
        $('.modal__open').click(function(i) {
            $('.modal').fadeIn(200);
        });
        $('.modal__close').click(function(i) {
            $('.modal').fadeOut(200);
        });
    })
script.
    var visData = {{vis | tojson}}
    var nodes = new vis.DataSet( visData.nodes );
    var edges = new vis.DataSet( visData.edges );
    var container = document.getElementById('network');
    var data = {
        nodes: nodes,
        edges: edges
    };
    var options = {
        nodes: {
            shape: "dot",
        },
        interaction: {
            hover: true
        }
    };
    var network = new vis.Network(container, data, options);
    
    this.network.on("hoverNode", (e) => {
        console.log('hovered');
        this.hoveredId = e.node;

        let node = nodes.get(this.hoveredId);
        node.color = "#7D5A5E";
        nodes.update(node);
    });

    this.network.on("blurNode", (e) => {
        console.log('blured');
        this.bluredNode = e.node;

        let node = nodes.get(this.bluredNode);
        node.color = "#B69E86";
        nodes.update(node);
    });

      // 点击鼠标事件
    this.network.on("selectNode", (e) => {
        console.log('selected');
        this.selectedId = e.nodes[0];
        if (e.nodes.length) {
            let p = this.network.getPositions(e.nodes[0]);
            let nodeId = e.nodes[0];
            console.log(p[nodeId]);
            // 获取缩放尺寸
            let scale = this.network.getScale();
            // canvas->dom 坐标转化
            let domPosi = this.network.canvasToDOM({
                x: p[nodeId]["x"],
                y: p[nodeId]["y"],
            });
            //- let domPosi = e.pointer.DOM;
            let node = nodes.get(this.selectedId);
            node.color = "#7D5A5E";
            nodes.update(node);
            console.log(node);
            console.log(this.network.getConnectedEdges(this.selectedId));
            

            console.log("domPosi ", domPosi["x"], domPosi["y"]);
            console.log("pointerDOM ", e.pointer.DOM.x, e.pointer.DOM.y);
            containerPos = container.getBoundingClientRect();
            // 设置环形位置;
            this.setCirclePostion(
                node,
                e.pointer.DOM.x + containerPos.left,
                e.pointer.DOM.y + containerPos.top,
                scale + 0.4
            );
        } else {
            this.hideCircle();
        }
    });

    this.network.on("deselectNode", (e) => {
        console.log('decelected');
        this.selectedId = e.previousSelection.nodes[0];
        console.log(this.selectedId);
        if (e.previousSelection.nodes.length) {
            let node = nodes.get(this.selectedId);
            node.color = "#B69E86";
            nodes.update(node);
            console.log(node);
            console.log(this.network.getConnectedEdges(this.selectedId));
            this.hideCircle();
        }
    });


        //  设置环形位置
    function setCirclePostion(node, x, y, scale) {
        let menu = document.getElementById("circle-option");
        menu.innerHTML = `
            <ul>
                <li>
                    <a href=https://www1.smaregi.jp/control/master/product/detail.html?productId=${node.id}>
                        商品ページを開く
                    </a>
                </li>
            </ul>
        `;
        menu.style = `left: ${x+30}px; top: ${y}px;transform:scale(${scale});display:block;`;
        //- circle.style = 'display: block;';
    };
    // 隐藏圆环选项
    function hideCircle() {
        let circle = document.getElementById("circle-option");
        circle.style = 'display:none;';
    };
style.
    ranking{
    margin: 0;
    padding: 0;
    list-style-type: none;
    }
    .ranking li{
    position: relative;
    margin: 0;
    padding: 0 0 0 16px;
    border-bottom: 1px dotted #ccc;
    }
    .ranking li::before{
    position: absolute;
    top: 7px;
    left: 1px;
    color: #d05;
    content: "★";
    font-size: 9px;
    }
    .ranking li:first-child::before,
    .ranking li:nth-child(2)::before,
    .ranking li:nth-child(3)::before{
    position: absolute;
    top: 1px;
    left: 0;
    width: 0;
    height: 0;
    border: 6px solid transparent;
    border-bottom: 10px solid #fb0;
    content: "";
    }
    .ranking li:first-child::after,
    .ranking li:nth-child(2)::after,
    .ranking li:nth-child(3)::after{
    position: absolute;
    top: 9px;
    left: 0;
    width: 0;
    height: 0;
    border: 6px solid #fb0;
    border-top: 3px solid transparent;
    border-bottom: 6px solid #f90;
    content: "";
    }
    .ranking li:nth-child(2)::before{
    border-bottom: 10px solid #ccc;
    }
    .ranking li:nth-child(2)::after{
    border: 6px solid #ccc;
    border-top: 3px solid transparent;
    border-bottom: 6px solid #aaa;
    }
    .ranking li:nth-child(3)::before{
    border-bottom: 10px solid #d98;
    }
    .ranking li:nth-child(3)::after{
    border: 6px solid #d98;
    border-top: 3px solid transparent;
    border-bottom: 6px solid #c76;
    }
    .ranking li span{
    color: #9ab;
    font-size: 11px;
    }

style(lang="less").
    .circle-option {
    background: rgba(255, 255, 255, 0.5);
    position: absolute;
    left: 0px;
    top: 0px;
    width: 150px;
    height: 100px;
    border: 3px solid rgba(200, 200, 200, 0.7);
    border-radius: 5px;
    box-sizing: border-box;
    z-index: 10;
    display: none;
    font-size: 16px;
    }
{% endblock %}
